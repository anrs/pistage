// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/gen/pistaged.proto

package pistaged

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f72c533a1c4b085, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Pong struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f72c533a1c4b085, []int{1}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "pistaged.Empty")
	proto.RegisterType((*Pong)(nil), "pistaged.Pong")
}

func init() {
	proto.RegisterFile("grpc/gen/pistaged.proto", fileDescriptor_4f72c533a1c4b085)
}

var fileDescriptor_4f72c533a1c4b085 = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x2f, 0x2a, 0x48,
	0xd6, 0x4f, 0x4f, 0xcd, 0xd3, 0x2f, 0xc8, 0x2c, 0x2e, 0x49, 0x4c, 0x4f, 0x4d, 0xd1, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xd8, 0xb9, 0x58, 0x5d, 0x73, 0x0b, 0x4a, 0x2a,
	0x95, 0x14, 0xb8, 0x58, 0x02, 0xf2, 0xf3, 0xd2, 0x85, 0x24, 0xb8, 0xd8, 0xcb, 0x52, 0x8b, 0x8a,
	0x33, 0xf3, 0xf3, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x23, 0x53, 0x2e, 0x8e,
	0x00, 0xa8, 0x36, 0x21, 0x4d, 0x2e, 0x96, 0x80, 0xcc, 0xbc, 0x74, 0x21, 0x7e, 0x3d, 0xb8, 0xc9,
	0x60, 0x63, 0xa4, 0xf8, 0x10, 0x02, 0x20, 0xe3, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0x56, 0x1a, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xad, 0x4f, 0xca, 0x5b, 0x8d, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PistagedClient is the client API for Pistaged service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PistagedClient interface {
	Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pong, error)
}

type pistagedClient struct {
	cc grpc.ClientConnInterface
}

func NewPistagedClient(cc grpc.ClientConnInterface) PistagedClient {
	return &pistagedClient{cc}
}

func (c *pistagedClient) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/pistaged.Pistaged/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PistagedServer is the server API for Pistaged service.
type PistagedServer interface {
	Ping(context.Context, *Empty) (*Pong, error)
}

// UnimplementedPistagedServer can be embedded to have forward compatible implementations.
type UnimplementedPistagedServer struct {
}

func (*UnimplementedPistagedServer) Ping(ctx context.Context, req *Empty) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

func RegisterPistagedServer(s *grpc.Server, srv PistagedServer) {
	s.RegisterService(&_Pistaged_serviceDesc, srv)
}

func _Pistaged_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PistagedServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pistaged.Pistaged/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PistagedServer).Ping(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pistaged_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pistaged.Pistaged",
	HandlerType: (*PistagedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Pistaged_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/gen/pistaged.proto",
}
